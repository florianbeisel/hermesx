name: Build
on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  verify:
    name: Verify
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn add -D @semantic-release/git @semantic-release/changelog
          npx semantic-release
      
      - name: Upload changelog
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: CHANGELOG.md

  build:
    needs: verify
    if: needs.verify.outputs.new_release_published == 'true'
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          ref: v${{ needs.verify.outputs.new_release_version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build icons
        run: yarn build:icons
        
      - name: Build app
        run: yarn make
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in out/make/**/*.{exe,zip,dmg}; do
            if [ -f "$file" ]; then
              gh release upload "v${{ needs.verify.outputs.new_release_version }}" "$file" --clobber
            fi
          done 